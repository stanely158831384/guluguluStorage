// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: picture.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createPicture = `-- name: CreatePicture :one
INSERT INTO picture (
    link,
    user_id
) VALUES (
    $1, $2
) 
RETURNING id, link, user_id, created_at
`

type CreatePictureParams struct {
	Link   pgtype.Text `json:"link"`
	UserID pgtype.Int8 `json:"user_id"`
}

func (q *Queries) CreatePicture(ctx context.Context, arg CreatePictureParams) (Picture, error) {
	row := q.db.QueryRow(ctx, createPicture, arg.Link, arg.UserID)
	var i Picture
	err := row.Scan(
		&i.ID,
		&i.Link,
		&i.UserID,
		&i.CreatedAt,
	)
	return i, err
}

const getPicture = `-- name: GetPicture :one
SELECT id, link, user_id, created_at FROM picture
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetPicture(ctx context.Context, id int64) (Picture, error) {
	row := q.db.QueryRow(ctx, getPicture, id)
	var i Picture
	err := row.Scan(
		&i.ID,
		&i.Link,
		&i.UserID,
		&i.CreatedAt,
	)
	return i, err
}
