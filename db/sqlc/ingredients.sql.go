// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: ingredients.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createIngredients = `-- name: CreateIngredients :one
INSERT INTO ingredients (
    ingredient,
    picture_id
) VALUES (
    $1, $2
) 
RETURNING id, ingredient, picture_id, created_at
`

type CreateIngredientsParams struct {
	Ingredient []string    `json:"ingredient"`
	PictureID  pgtype.Int8 `json:"picture_id"`
}

func (q *Queries) CreateIngredients(ctx context.Context, arg CreateIngredientsParams) (Ingredient, error) {
	row := q.db.QueryRow(ctx, createIngredients, arg.Ingredient, arg.PictureID)
	var i Ingredient
	err := row.Scan(
		&i.ID,
		&i.Ingredient,
		&i.PictureID,
		&i.CreatedAt,
	)
	return i, err
}

const getIngredient = `-- name: GetIngredient :one
SELECT id, ingredient, picture_id, created_at FROM ingredients
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetIngredient(ctx context.Context, id int64) (Ingredient, error) {
	row := q.db.QueryRow(ctx, getIngredient, id)
	var i Ingredient
	err := row.Scan(
		&i.ID,
		&i.Ingredient,
		&i.PictureID,
		&i.CreatedAt,
	)
	return i, err
}
