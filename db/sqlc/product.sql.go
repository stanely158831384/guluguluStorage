// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: product.sql

package db

import (
	"context"
)

const createProduct = `-- name: CreateProduct :one
INSERT INTO product (
    name,
    category_id,
    ingredients_id
) VALUES (
    $1, $2, $3
) 
RETURNING id, name, category_id, ingredients_id, risk_level, picture_id, created_at
`

type CreateProductParams struct {
	Name          string `json:"name"`
	CategoryID    int64  `json:"category_id"`
	IngredientsID int64  `json:"ingredients_id"`
}

func (q *Queries) CreateProduct(ctx context.Context, arg CreateProductParams) (Product, error) {
	row := q.db.QueryRow(ctx, createProduct, arg.Name, arg.CategoryID, arg.IngredientsID)
	var i Product
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.CategoryID,
		&i.IngredientsID,
		&i.RiskLevel,
		&i.PictureID,
		&i.CreatedAt,
	)
	return i, err
}

const getProduct = `-- name: GetProduct :one
SELECT id, name, category_id, ingredients_id, risk_level, picture_id, created_at FROM product
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetProduct(ctx context.Context, id int64) (Product, error) {
	row := q.db.QueryRow(ctx, getProduct, id)
	var i Product
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.CategoryID,
		&i.IngredientsID,
		&i.RiskLevel,
		&i.PictureID,
		&i.CreatedAt,
	)
	return i, err
}
